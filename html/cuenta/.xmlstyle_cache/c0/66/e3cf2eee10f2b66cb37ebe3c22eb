
package Apache::AxKit::Language::XSP::ROOT::home::httpd::zonasegura_2egrupoalternativa_2ecom::html::cuenta::login_2exsp;
use Apache;
use Apache::Constants qw(:common);
use XML::LibXML;
Apache::AxKit::Language::XSP::Page->import( qw(__mk_text_node __mk_comment_node __mk_ns_element_node __mk_element_node) );
#initialize xsp namespace
use Apache::AxKit::Plugin::Session;
use Time::Piece;
# Evil hack to globally prepare a session object. Actually, it is quite waterproof...
my $session;
{ my $handler = \&xml_generator;
*xml_generator = sub { $session = Apache->request->pnotes("SESSION"); goto $handler; }; }

#initialize xsp namespace


@Apache::AxKit::Language::XSP::ROOT::home::httpd::zonasegura_2egrupoalternativa_2ecom::html::cuenta::login_2exsp::ISA = ('Apache::AxKit::Language::XSP::Page');
sub xml_generator {
my $class = shift;
my ($r, $cgi, $document, $parent) = @_;

$parent = __mk_element_node($document, $parent, q|ca|);
$parent = __mk_element_node($document, $parent, q|form|);
$parent->setAttribute(q|id|,q|login|);
$parent = __mk_element_node($document, $parent, q|if|);
__mk_text_node($document, $parent, "" . do {$r->pnotes('if')}); # non xsp tag
$parent = $parent->getParentNode;

			my %args = $r->args;
			if (defined($r->pnotes('login_error'))) {
				$parent = __mk_element_node($document, $parent, q|error|);{ #start charset-convert
  my $charconv = Apache::AxKit::CharsetConv->new('iso-8859-1','utf-8');
  my $to_convert = '' . do {$r->pnotes('login_error')};
__mk_text_node($document, $parent, "" . do {  $charconv->convert($to_convert);}); # xsp tag
} # end of charset-convs
$parent = $parent->getParentNode;

			}
		$parent = __mk_element_node($document, $parent, q|action|);
__mk_text_node($document, $parent, q|facturas.xsp|);
$parent = $parent->getParentNode;
$parent = __mk_element_node($document, $parent, q|login|);
__mk_text_node($document, $parent, "" . do {$args{'login'}}); # non xsp tag
$parent = $parent->getParentNode;
$parent = $parent->getParentNode;
$parent = $parent->getParentNode;

return OK;
}
