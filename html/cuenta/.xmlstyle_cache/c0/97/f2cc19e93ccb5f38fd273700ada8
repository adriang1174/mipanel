
package Apache::AxKit::Language::XSP::ROOT::home::httpd::zonasegura_2egrupoalternativa_2ecom::html::cuenta::deuda_2exsp;
use Apache;
use Apache::Constants qw(:common);
use XML::LibXML;
Apache::AxKit::Language::XSP::Page->import( qw(__mk_text_node __mk_comment_node __mk_ns_element_node __mk_element_node) );
#initialize xsp namespace
use Apache::AxKit::Plugin::Session;
use Time::Piece;
# Evil hack to globally prepare a session object. Actually, it is quite waterproof...
my $session;
{ my $handler = \&xml_generator;
*xml_generator = sub { $session = Apache->request->pnotes("SESSION"); goto $handler; }; }

#initialize xsp namespace


@Apache::AxKit::Language::XSP::ROOT::home::httpd::zonasegura_2egrupoalternativa_2ecom::html::cuenta::deuda_2exsp::ISA = ('Apache::AxKit::Language::XSP::Page');
sub xml_generator {
my $class = shift;
my ($r, $cgi, $document, $parent) = @_;

$parent = __mk_element_node($document, $parent, q|ca|);
$parent = __mk_element_node($document, $parent, q|xsl-template|);
__mk_text_node($document, $parent, q|deuda|);
$parent = $parent->getParentNode;
{# start include-uri
my ($_uri);$_uri = q|axkit:includes/mostrar_cliente.exsp|;;
AxKit::XSP::Util::include_uri(
$document, $parent, $_uri);}
__mk_text_node($document, $parent, "" . do {{ my %_args = ();; Apache::AxKit::Language::XSP::TaglibHelper::handle_result('botonera():listtag=botonera:itemtag=opcion', undef(), 0, $document, $parent, CA::BaseTaglib::botonera());}
}); # non xsp tag

my %args = $r->args;
my $if = $r->pnotes('if');
my $sesion = $r->pnotes('sesion');
my $fecha_fin = $args{'fecha_fin'};
my $op = $args{'op'};
my $agente = $r->pnotes('usuario');

$parent = __mk_element_node($document, $parent, q|if|);
__mk_text_node($document, $parent, "" . do {$if}); # non xsp tag
$parent = $parent->getParentNode;

if ($agente->esAgente()) {
  $parent = __mk_element_node($document, $parent, q|title|);
$parent->setAttribute(q|id|,q|1|);
$parent->setAttribute(q|href|,q|deuda.xsp|);
__mk_text_node($document, $parent, q|Estado de deuda|);
$parent = $parent->getParentNode;


	if ((defined $args{imprimir}) and ($args{imprimir} eq '1')) {
		$parent = __mk_element_node($document, $parent, q|imprimir|);
__mk_text_node($document, $parent, q|1|);
$parent = $parent->getParentNode;

	}
	# Mostrar el form para elegir fechas

	my $errores = {};
	if ((defined $op) and ($op eq 'l')) {
		# Comprobar que las fechas sean correctas.
		if (not CA::Fecha->esFecha($fecha_fin)) {
			$fecha_fin = CA::FechasSistema->getFechaHasta('cc') || CA::FechasSistema->getFechaActual();
		} else {
			$fecha_fin = CA::Fecha->user2sql($fecha_fin);
		}
		$sesion->setVar('CC_fecha_fin', $fecha_fin);
	} else {
		# Tratar de obtener las fechas de la sesion, y si no, del sistema	
		$fecha_fin = $sesion->getVar('CC_fecha_fin');
		if (not defined($fecha_fin)) {
			$fecha_fin = CA::FechasSistema->getFechaHasta('cc') || CA::FechasSistema->getFechaActual();
		}
	}

	my $clientes = $agente->clientes;
	$r->pnotes('clientes', $clientes);
	$r->pnotes('fecha_fin', $fecha_fin);

	{# start include-uri
my ($_uri);$_uri = q|axkit:includes/mostrar_deuda_clientes.exsp|;;
AxKit::XSP::Util::include_uri(
$document, $parent, $_uri);}

}

$parent = $parent->getParentNode;

	
return OK;
}
