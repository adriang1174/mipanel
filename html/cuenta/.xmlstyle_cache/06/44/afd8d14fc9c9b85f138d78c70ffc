
package Apache::AxKit::Language::XSP::ROOT::home::httpd::zonasegura_2egrupoalternativa_2ecom::html::cuenta::proyectos_2exsp;
use Apache;
use Apache::Constants qw(:common);
use XML::LibXML;
Apache::AxKit::Language::XSP::Page->import( qw(__mk_text_node __mk_comment_node __mk_ns_element_node __mk_element_node) );
#initialize xsp namespace
use Apache::AxKit::Plugin::Session;
use Time::Piece;
# Evil hack to globally prepare a session object. Actually, it is quite waterproof...
my $session;
{ my $handler = \&xml_generator;
*xml_generator = sub { $session = Apache->request->pnotes("SESSION"); goto $handler; }; }

#initialize xsp namespace



@Apache::AxKit::Language::XSP::ROOT::home::httpd::zonasegura_2egrupoalternativa_2ecom::html::cuenta::proyectos_2exsp::ISA = ('Apache::AxKit::Language::XSP::Page');
sub xml_generator {
my $class = shift;
my ($r, $cgi, $document, $parent) = @_;

$parent = __mk_element_node($document, $parent, q|ca|);
$parent = __mk_element_node($document, $parent, q|xsl-template|);
__mk_text_node($document, $parent, q|proyectos|);
$parent = $parent->getParentNode;
$parent = __mk_element_node($document, $parent, q|title|);
$parent->setAttribute(q|id|,q|1|);
$parent->setAttribute(q|href|,q|proyectos.xsp|);
__mk_text_node($document, $parent, q|Referencia de llamadas|);
$parent = $parent->getParentNode;
{# start include-uri
my ($_uri);$_uri = q|axkit:includes/mostrar_cliente.exsp|;;
AxKit::XSP::Util::include_uri(
$document, $parent, $_uri);}
__mk_text_node($document, $parent, "" . do {{ my %_args = ();; Apache::AxKit::Language::XSP::TaglibHelper::handle_result('botonera():listtag=botonera:itemtag=opcion', undef(), 0, $document, $parent, CA::BaseTaglib::botonera());}
}); # non xsp tag

my %args = $r->args;
my $op = $args{'op'};
my $if = $r->pnotes('if');
$op = 'l' if (not defined($op));
my $proyecto;
my $cliente = $r->pnotes('cliente');

$parent = __mk_element_node($document, $parent, q|if|);
__mk_text_node($document, $parent, "" . do {$if}); # non xsp tag
$parent = $parent->getParentNode;

if ($op eq 'n') {
	$r->notes('vars', {});
	$parent = __mk_element_node($document, $parent, q|title|);
$parent->setAttribute(q|id|,q|2|);
__mk_text_node($document, $parent, q|Nuevo proyecto|);
$parent = $parent->getParentNode;
{# start include-uri
my ($_uri);$_uri = q|axkit:includes/form_agregar_proyecto.exsp|;;
AxKit::XSP::Util::include_uri(
$document, $parent, $_uri);}

} elsif ($op eq 'l') {
	my $proyectos = CA::Proyecto->buscarPorClienteId($cliente->cliente_id);
	$r->pnotes('proyectos', $proyectos);
	{# start include-uri
my ($_uri);$_uri = q|axkit:includes/listar_proyectos.exsp|;;
AxKit::XSP::Util::include_uri(
$document, $parent, $_uri);}

} elsif (($op eq 'b') or ($op eq 'm') or ($op eq 'e') or ($op eq 'v')) {
	if (not defined($args{destino})) {
		$parent = __mk_element_node($document, $parent, q|error|);
__mk_text_node($document, $parent, q|Debe especificar un destino.|);
$parent = $parent->getParentNode;

	} elsif ($args{destino} !~ /^[\d+()-]+$/) {
		$parent = __mk_element_node($document, $parent, q|error|);
__mk_text_node($document, $parent, q|Número de teléfono inválido|);
$parent = $parent->getParentNode;
 
	} elsif (not defined($proyecto = CA::Proyecto->load($cliente->cliente_id, $args{destino}))) {
		$parent = __mk_element_node($document, $parent, q|error|);
__mk_text_node($document, $parent, q|Destino inexistente.|);
$parent = $parent->getParentNode;

	} elsif ($proyecto->cliente_id != $cliente->cliente_id) {
		$parent = __mk_element_node($document, $parent, q|error|);
__mk_text_node($document, $parent, q|Destino inexistente.|);
$parent = $parent->getParentNode;

	} else {
		if ($op eq 'e') {
			$r->pnotes('proyecto', $proyecto);
			$r->pnotes('vars', {});
			$parent = __mk_element_node($document, $parent, q|title|);
$parent->setAttribute(q|id|,q|2|);
__mk_text_node($document, $parent, q|Edición|);
$parent = $parent->getParentNode;
{# start include-uri
my ($_uri);$_uri = q|axkit:includes/form_editar_proyecto.exsp|;;
AxKit::XSP::Util::include_uri(
$document, $parent, $_uri);}

		} elsif ($op eq 'v') {
			$r->pnotes('proyecto', $proyecto);
			$parent = __mk_element_node($document, $parent, q|title|);
$parent->setAttribute(q|id|,q|2|);
__mk_text_node($document, $parent, q|Destino |);
__mk_text_node($document, $parent, "" . do {$proyecto->destino}); # non xsp tag
$parent = $parent->getParentNode;

			{# start include-uri
my ($_uri);$_uri = q|axkit:includes/mostrar_proyecto.exsp|;;
AxKit::XSP::Util::include_uri(
$document, $parent, $_uri);}

		} elsif ($op eq 'm') {
			# Si no vino el parametro proyecto, se setea como no asignado
			# y se borra el proyecto.  En caso que venga algo, se modifica.
			my %vars = $r->content;
			my $errors = {};
			if ($vars{proyecto}) {
				my $data = { proyecto => $vars{proyecto}, nombre => $vars{nombre}, apellido => $vars{apellido}, empresa => $vars{empresa}, cargo => $vars{cargo}, email => $vars{email} };
				my $errores = $proyecto->verificarModificar($data);
				if (not %$errores) {
					if ($proyecto->modificar($data)) {
						$parent = __mk_element_node($document, $parent, q|mensaje|);
$parent->setAttribute(q|tipo|,q|ok|);
__mk_text_node($document, $parent, q|El proyecto fue modificado.|);
$parent = $parent->getParentNode;

					} else {
						$parent = __mk_element_node($document, $parent, q|error|);
$parent->setAttribute(q|tipo|,q|interno|);
__mk_text_node($document, $parent, q|Ocurrió un error al modificar el proyecto.|);
$parent = $parent->getParentNode;

					}
					my $proyectos = CA::Proyecto->buscarPorClienteId($cliente->cliente_id);
					$r->pnotes('proyectos', $proyectos);
					{# start include-uri
my ($_uri);$_uri = q|axkit:includes/listar_proyectos.exsp|;;
AxKit::XSP::Util::include_uri(
$document, $parent, $_uri);}

				} else {
					$r->pnotes('errores', $errores);
					$r->pnotes('vars', \%vars);
					$parent = __mk_element_node($document, $parent, q|title|);
$parent->setAttribute(q|id|,q|2|);
__mk_text_node($document, $parent, q|Edición|);
$parent = $parent->getParentNode;

					{# start include-uri
my ($_uri);$_uri = q|axkit:includes/form_editar_proyecto.exsp|;;
AxKit::XSP::Util::include_uri(
$document, $parent, $_uri);}

				}
			} else {
				# Vino proyecto en blanco. Borrarlo
				if ($proyecto->borrar) {
					$parent = __mk_element_node($document, $parent, q|mensaje|);
$parent->setAttribute(q|tipo|,q|ok|);
__mk_text_node($document, $parent, q|El proyecto fue borrado.|);
$parent = $parent->getParentNode;

				} else {
					$parent = __mk_element_node($document, $parent, q|error|);
$parent->setAttribute(q|tipo|,q|interno|);
__mk_text_node($document, $parent, q|Ocurrió un error al borrar el proyecto.|);
$parent = $parent->getParentNode;

				}
				my $proyectos = CA::Proyecto->buscarPorClienteId($cliente->cliente_id);
				$r->pnotes('proyectos', $proyectos);
				{# start include-uri
my ($_uri);$_uri = q|axkit:includes/listar_proyectos.exsp|;;
AxKit::XSP::Util::include_uri(
$document, $parent, $_uri);}

			}
		} elsif ($op eq 'b') {
			if ($proyecto->borrar) {
				$parent = __mk_element_node($document, $parent, q|mensaje|);
$parent->setAttribute(q|tipo|,q|ok|);
__mk_text_node($document, $parent, q|El proyecto fue borrado.|);
$parent = $parent->getParentNode;

			} else {
				$parent = __mk_element_node($document, $parent, q|error|);
$parent->setAttribute(q|tipo|,q|interno|);
__mk_text_node($document, $parent, q|Ocurrió un error al borrar el proyecto.|);
$parent = $parent->getParentNode;

			}
			my $proyectos = CA::Proyecto->buscarPorClienteId($cliente->cliente_id);
			$r->pnotes('proyectos', $proyectos);
			{# start include-uri
my ($_uri);$_uri = q|axkit:includes/listar_proyectos.exsp|;;
AxKit::XSP::Util::include_uri(
$document, $parent, $_uri);}

		}
	}
} elsif ($op eq 'a') {
	my $errores = {}; 
	my $proyecto;
	my %vars = $r->content;
	my $data = {
		cliente_id => $cliente->cliente_id,
		destino => $vars{destino},
		proyecto => $vars{proyecto},
		nombre => $vars{nombre},
		apellido => $vars{apellido},
		empresa => $vars{empresa},
		cargo => $vars{cargo},
		email => $vars{email}
	};
	my $errores = CA::Proyecto->verificarAgregar($data);
	if (not %$errores) {
		if (defined($proyecto = CA::Proyecto->agregar($data))) {
			$parent = __mk_element_node($document, $parent, q|mensaje|);
$parent->setAttribute(q|tipo|,q|ok|);
__mk_text_node($document, $parent, q|El proyecto fue agregado.|);
$parent = $parent->getParentNode;

		} else {
			$parent = __mk_element_node($document, $parent, q|error|);
$parent->setAttribute(q|tipo|,q|interno|);
__mk_text_node($document, $parent, q|Ocurrió un error al agregar el proyecto.|);
$parent = $parent->getParentNode;

		}
		my $proyectos = CA::Proyecto->buscarPorClienteId($cliente->cliente_id);
		$r->pnotes('proyectos', $proyectos);
		{# start include-uri
my ($_uri);$_uri = q|axkit:includes/listar_proyectos.exsp|;;
AxKit::XSP::Util::include_uri(
$document, $parent, $_uri);}

	} else {
		$r->pnotes('errores', $errores);
		$r->pnotes('vars', \%vars);
		$parent = __mk_element_node($document, $parent, q|title|);
$parent->setAttribute(q|id|,q|2|);
__mk_text_node($document, $parent, q|Nuevo proyecto|);
$parent = $parent->getParentNode;

		{# start include-uri
my ($_uri);$_uri = q|axkit:includes/form_agregar_proyecto.exsp|;;
AxKit::XSP::Util::include_uri(
$document, $parent, $_uri);}

	}
} else {
	$parent = __mk_element_node($document, $parent, q|error|);
__mk_text_node($document, $parent, q|Operación desconocida|);
$parent = $parent->getParentNode;

}
$parent = $parent->getParentNode;

return OK;
}
